/**
 * 
 */
package com.craft.reviewable.validator;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import com.craft.reviewable.domain.Product;

/**
 * @author Vignesh
 *
 */
@Component("beforeCreateProductValidator")
public class ProductValidator implements Validator {
	public static final Logger LOGGER = LoggerFactory.getLogger(com.craft.reviewable.validator.ProductValidator.class);

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean supports(Class<?> clazz) {
		return Product.class.equals(clazz);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void validate(Object target, Errors errors) {
		Product product = (Product) target;
		LOGGER.debug("Incoming Payload for validator: {}", product);
		if (!checkIfEmpty(product.getId())) {
			LOGGER.info("Bad request. ID should not be passed via REST API");
			errors.rejectValue("name", "name.empty",
					"Product ID should not be passed while creating new product. It is generated by the system");
		}
		if (checkIfEmpty(product.getName())) {
			LOGGER.info("Bad request. Empty name field detected by validator");
			errors.rejectValue("name", "name.empty", "Product name cannot be empty");
		}

	}

	/**
	 * Check if the passed value is empty
	 * 
	 * @param value
	 *            The input value
	 * @return true if value is empty; false if value is not empty
	 */
	private boolean checkIfEmpty(String value) {
		return (value == null || value.trim().length() == 0);
	}

}
